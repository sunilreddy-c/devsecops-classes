what is nginx conf===/etc/nginx/nginx.conf
root directory of nginx==/usr/shares/nginx/html--here the whole content will be present

How DNS works
google.com --> browser cache --> OS --> OS Cache --> ISP DNS resolver --> root servers --> TLD info --> .com TLD --> name servers --> A record
name servers --> who are managing that domain now
domain registar --> a mediator to sell the domain, they have default name servers

create hosted zone in AWS, get the NS records and update in domain provider
TTL --> time to live is DNS cache before issuing next DNS request

below one all are certificates
A --> IpV4
CNAME --> points to another domain
MX --> mail records
TXT --> domain verification
NS --> Nameservers
AAAA -> Ipv6

mobaxterm
sudo set-prompt frontend---to set name for ipaddress

Commands
==============
command for dizbale the module === dnf module disable nginx -y
command for enable the module ==== dnf module enable nginx:1.24 -y
command for install nginx server ==== dnf module install nginx-y
command for enable the nginx==  systemctl enable nginx 
command for start nginx == systemctl start nginx
command for check status of nginx == 
command for all the servers info ====ps -ef
command for to get particular server info == ps -ef | grep nginx

to remove default content in /usr/share/nginx/html/* 
command is === (rm -rf /usr/share/nginx/html/*)
then we need to download to content to temp directory
command is ===curl -o /tmp/frontend.zip https://roboshop-artifacts.s3.amazonaws.com/frontend-v3.zip
then we need to unzip that file in nginx home directory
command is ==== cd /usr/share/nginx/html 
                 unzip /tmp/frontend.zip

and we need to delete the default config in which present in (/etc/nginx/nginx.conf) in this location
and add the content which are provided by developer
 and we need to restart the server
systemctl restart nginx

repos are present in
/etc/yum.repos.d=== in this location repos will be presented

installing mongoDB
=====================
first we need to check the file are present are not in this folder=== (/etc/yum.repos.d)
if files are not present in the folder we need to create == ( vim /etc/yum.repos.d/mongo.repo)
then we can insert this data into above file
[mongodb-org-7.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/9/mongodb-org/7.0/x86_64/
enabled=1
gpgcheck=0

then we need to install mongodb 
command is === (dnf install mongodb-org -y)

Start & Enable MongoDB Service
=================================
systemctl enable mongod
systemctl start mongod 

to check port command is netstat -lntp

Usually MongoDB opens the port only to localhost(127.0.0.1), meaning this service can be accessed by the application that is hosted on this server only. However, we need to access this service to be accessed by another server, So we need to change the config accordingly.

Update listen address from 127.0.0.1 to 0.0.0.0 in /etc/mongod.conf

You can edit file by using vim /etc/mongod.conf

Restart the service to make the changes effected.

systemctl restart mongod


installing nodeJS
==================
Install NodeJS, By default NodeJS 16 is available, We would like to enable 20 version and install list.
if we want to see which are versions are avaliable command is == dnf module list nodejs

Disable current module
=======================
dnf module disable nodejs

Enable required module
======================
dnf module enable nodejs:20 -y

Install NodeJS
============
dnf install nodejs -y

Configure the application.

Our application developed by the developer of our org and it is not having any RPM software just like other softwares. So we need to configure every step manually

We already discussed in Linux basics section that applications should run as nonroot user.

Add application User

useradd --system --home /app --shell /sbin/nologin --comment "roboshop system user" roboshop

this is the command  used to get info about user
commad is === cat /etc/passwd | grep roboshop

make directory and install nodejs code into that directoey
================================================================

User roboshop is a function / daemon user to run the application. Apart from that we dont use this user to login to server.

Also, username roboshop has been picked because it more suits to our project name.

We keep application in one standard location. This is a usual practice that runs in the organization.

Lets setup an app directory.

===mkdir /app 
Download the application code to created app directory.

===curl -o /tmp/catalogue.zip https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
==cd /app 
==unzip /tmp/catalogue.zip

Every application is developed by development team will have some common softwares that they use as libraries. This application also have the same way of defined dependencies in the application configuration.

Lets download the dependencies.

==cd /app
==npm install

We need to setup a new service in systemd so systemctl can manage this service

We already discussed in linux basics that advantages of systemctl managing services, Hence we are taking that approach. Which is also a standard way in the OS.

Setup SystemD Catalogue Service

[Unit]
Description = Catalogue Service

[Service]
User=roboshop
Environment=MONGO=true
// highlight-start
Environment=MONGO_URL="mongodb://<MONGODB-SERVER-IPADDRESS>:27017/catalogue"
// highlight-end
ExecStart=/bin/node /app/server.js
SyslogIdentifier=catalogue

[Install]
WantedBy=multi-user.target
Hint! You can create file by using vim /etc/systemd/system/catalogue.service

Ensure you replace <MONGODB-SERVER-IPADDRESS> with IP address

Load the service.

systemctl daemon-reload
This above command is because we added a new service, We are telling systemd to reload so it will detect new service.

Start the service.

==systemctl enable catalogue 
==systemctl start catalogue
==systemctl status catalogue




































































